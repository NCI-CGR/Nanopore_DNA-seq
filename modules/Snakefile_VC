# Reference
ref = config["reference"]

rule minimap2:
    input:
          out + "mbc/basic/{sample}/complete.txt",
          {ref}
    output:
          out + "vc/{sample}/bam/minimap.sam"
    conda: "env.yml"
    threads: 16
    shell:
          """
          minimap2 -ax map-ont {input[1]} {out}mbc/basic/{wildcards.sample}/basecalls.fastq > {output} 2> log/{wildcards.sample}_minimap.err 
          """

rule samtools:
    input:
          out + "vc/{sample}/bam/minimap.sam"
    output:
          out + "vc/{sample}/bam/minimap_sorted.bam"
    conda: "env.yml"
    threads: 16
    shell:
          """
          samtools view -b {input} | samtools sort > {output[0]} 2>log/{wildcards.sample}_minimap_sort.err
          samtools index {output} 2>log/{wildcards.sample}_minimap_index.err 
          """
    
rule PMD:
    input:
          out + "vc/{sample}/bam/minimap_sorted.bam",
          {ref}
    output:
          out + "vc/{sample}/{sample}_PEPPER_Margin_DeepVariant.vcf.gz",
          out + "vc/{sample}/complete.txt"
    params:
          outputs = config.get("outputs","basecalls mappings mod_mappings mods"),
          base_conv = config.get("base_conv","C T"),
          thresh = config.get("thresh", 0.75)
    threads: 30
    shell:
         """
         {bind}
         singularity exec \
         {pepper}/pepper_deepvariant_r0.4.sif \
         run_pepper_margin_deepvariant call_variant \
                   -b {input[0]} \
                   -f {input[1]} \
                   -p {wildcards.sample}_PEPPER_Margin_DeepVariant \
                   -o {out}vc/{wildcards.sample} \
                   -t 30 \
                   --ont 2>log/{wildcards.sample}_pmd.err
         touch {output[1]}
         """

rule snpeff2:
    input:
          out + "vc/{sample}/{sample}_PEPPER_Margin_DeepVariant.vcf.gz"
    output:
          out + "vc/{sample}/{sample}_PEPPER_Margin_DeepVariant_ann.vcf"
    conda: "env.yml"
    threads: 6
    shell:
          """
          cd {out}vc/{wildcards.sample}/
          java -Xmx16g -jar $SNPEFF_JAR -v hg38 {input} > {output} 2>{run}log/{wildcards.sample}_snpeff2.err
          """

rule snpsift2:
     input:
           out + "vc/{sample}/{sample}_PEPPER_Margin_DeepVariant_ann.vcf"
     output:
           out + "vc/{sample}/filter/{sample}_PEPPER_Margin_DeepVariant_ann_Qfiltered.vcf"
     params:
           filter = config.get("snpsift_filter2", "(QUAL > 30)")
     conda: "env.yml"
     threads: 6
     run:
           if config["snpsift2"] == "yes":
              shell("""cat {input} | java -jar $SNPSIFT_JAR filter "{params.filter}" > {output} 2>log/{wildcards.sample}_snpsift2.err""")
           else:
                shell("""touch {output}""")

rule snpeff3:
    input:
          out + "vc/{sample}/filter/{sample}_PEPPER_Margin_DeepVariant_ann_Qfiltered.vcf"
    output:
          out + "vc/{sample}/filter/{sample}_PEPPER_Margin_DeepVariant_ann_Qfiltered_ann.vcf"
    conda: "env.yml"
    threads: 6
    shell:
          """
          cd {out}vc/{wildcards.sample}/filter/
          java -Xmx16g -jar $SNPEFF_JAR -v hg38 {input} > {output} 2>{run}log/{wildcards.sample}_snpeff3.err
          """
